name: build

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [ '1.21' ]
    name: Build
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout
        uses: actions/checkout@v3

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha

      - name: Install dependencies
        run: |
          sudo snap install zig --classic --beta
          docker pull crazymax/xgo:latest
          go install github.com/crazy-max/xgo@latest
          sudo apt install upx

      - name: Build
        run: |
          bash build.sh dev

      - name: Create Release
        id: create_release
        run: |
          tag=$(git describe --tags --abbrev=0)
          body="Release $tag"
          response=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"tag_name\": \"$tag\", \"name\": \"$tag\", \"body\": \"$body\"}" https://api.github.com/repos/${{ github.repository }}/releases)
          upload_url=$(echo "$response" | jq -r .upload_url)
          upload_url="${upload_url/\{?name,label\}/}"
          echo "::set-output name=upload_url::$upload_url"
          echo "::set-output name=tag_name::$tag"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*
          asset_name: ${{ github.run_id }}-asset
          asset_content_type: application/octet-stream
